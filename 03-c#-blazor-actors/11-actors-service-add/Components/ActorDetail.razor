@page "/actordetail/{Id}"

@inject IActorService _actorService

@if (@SelectedActor != null)
{
    <h2>Details for @SelectedActor.FirstName @SelectedActor.LastName.ToUpper()</h2>
    <br />
    <div><span>id: </span>@SelectedActor.Id</div>
    <div><span>first name: </span>@SelectedActor.FirstName</div>
    <div><span>last name: </span>@SelectedActor.LastName</div>
    <div><span>country: </span>@SelectedActor.CountryCode</div>
    <div><span>date of birth: </span> @SelectedActor.DateOfBirth?.ToString("MM/dd/yyyy")</div>
    <br />
    <div>
        <label> first name: </label>
        <input @bind="SelectedActor.FirstName" placeholder="FirstName">
    </div>
    <div>
        <label> last name: </label>
        <input @bind="SelectedActor.LastName" placeholder="LastName">
    </div>
    <div>
        <label> country: </label>
        <input @bind="SelectedActor.CountryCode" placeholder="CountryCode">
    </div>
    <div>
        <label> date of birth: </label>
        <input @bind="SelectedActor.DateOfBirth" placeholder="DateOfBirth">
    </div>
}

@code
{
    public Actor SelectedActor { get; set; }

    [Parameter]
    public string Id { get; set; }

    private List<Actor> actors;
    protected override async Task OnInitializedAsync()
    {
        actors = await _actorService.GetActors();
        SelectedActor = actors.First(x => x.Id == long.Parse( Id ) );
    }
}
